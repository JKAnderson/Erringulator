using SoulsFormats;
using System.Collections.Generic;

namespace Erringulator.Randomizer
{
    internal partial class Randomizer
    {
        private void ProcessFace(PARAM param)
        {
            Dictionary<string, object[]> options = GetAllOptions(param);
            foreach (PARAM.Row row in param.Rows)
            {
                void r(string field) => row[field].Value = options[field].Random(Rand);
                //r("face_partsId");
                r("skin_color_R");
                r("skin_color_G");
                r("skin_color_B");
                r("skin_gloss");
                r("skin_pores");
                r("face_beard");
                r("face_aroundEye");
                r("face_aroundEyeColor_R");
                r("face_aroundEyeColor_G");
                r("face_aroundEyeColor_B");
                r("face_cheek");
                r("face_cheekColor_R");
                r("face_cheekColor_G");
                r("face_cheekColor_B");
                r("face_eyeLine");
                r("face_eyeLineColor_R");
                r("face_eyeLineColor_G");
                r("face_eyeLineColor_B");
                r("face_eyeShadowDown");
                r("face_eyeShadowDownColor_R");
                r("face_eyeShadowDownColor_G");
                r("face_eyeShadowDownColor_B");
                r("face_eyeShadowUp");
                r("face_eyeShadowUpColor_R");
                r("face_eyeShadowUpColor_G");
                r("face_eyeShadowUpColor_B");
                r("face_lip");
                r("face_lipColor_R");
                r("face_lipColor_G");
                r("face_lipColor_B");
                r("body_hair");
                r("body_hairColor_R");
                r("body_hairColor_G");
                r("body_hairColor_B");
                //r("eye_partsId");
                r("eyeR_irisColor_R");
                r("eyeR_irisColor_G");
                r("eyeR_irisColor_B");
                r("eyeR_irisScale");
                r("eyeR_cataract");
                r("eyeR_cataractColor_R");
                r("eyeR_cataractColor_G");
                r("eyeR_cataractColor_B");
                r("eyeR_scleraColor_R");
                r("eyeR_scleraColor_G");
                r("eyeR_scleraColor_B");
                r("eyeR_irisDistance");
                r("eyeL_irisColor_R");
                r("eyeL_irisColor_G");
                r("eyeL_irisColor_B");
                r("eyeL_irisScale");
                r("eyeL_cataract");
                r("eyeL_cataractColor_R");
                r("eyeL_cataractColor_G");
                r("eyeL_cataractColor_B");
                r("eyeL_scleraColor_R");
                r("eyeL_scleraColor_G");
                r("eyeL_scleraColor_B");
                r("eyeL_irisDistance");
                r("hair_partsId");
                r("hair_color_R");
                r("hair_color_G");
                r("hair_color_B");
                r("hair_shininess");
                r("hair_rootBlack");
                r("hair_whiteDensity");
                //r("beard_partsId");
                r("beard_color_R");
                r("beard_color_G");
                r("beard_color_B");
                r("beard_shininess");
                r("beard_rootBlack");
                r("beard_whiteDensity");
                r("eyebrow_partsId");
                r("eyebrow_color_R");
                r("eyebrow_color_G");
                r("eyebrow_color_B");
                r("eyebrow_shininess");
                r("eyebrow_rootBlack");
                r("eyebrow_whiteDensity");
                r("eyelash_partsId");
                r("eyelash_color_R");
                r("eyelash_color_G");
                r("eyelash_color_B");
                //r("accessories_partsId");
                r("accessories_color_R");
                r("accessories_color_G");
                r("accessories_color_B");
                //r("decal_partsId");
                r("decal_posX");
                r("decal_posY");
                r("decal_angle");
                r("decal_scale");
                r("decal_color_R");
                r("decal_color_G");
                r("decal_color_B");
                r("decal_gloss");
                r("decal_mirror");
                r("chrBodyScaleHead");
                r("chrBodyScaleBreast");
                r("chrBodyScaleAbdomen");
                r("chrBodyScaleRArm");
                r("chrBodyScaleRLeg");
                r("chrBodyScaleLArm");
                r("chrBodyScaleLLeg");
                //r("burn_scar");
                //r("override_eye_partsId");
                //r("override_eye_irisColor");
                //r("override_eye_cataract");
                //r("override_eye_cataractColor");
                //r("override_eye_scleraColor");
                //r("override_burn_scar");
                //r("age");
                //r("gender");
                r("caricatureGeometry");
                r("caricatureTexture");
                for (int i = 0; i < 61; i++)
                {
                    r($"faceGeoData{i:D2}");
                }
                for (int i = 0; i < 36; i++)
                {
                    r($"faceTexData{i:D2}");
                }
                for (int i = 0; i < 26; i++)
                {
                    r($"faceGeoAsymData{i:D2}");
                }
            }
        }
    }
}
